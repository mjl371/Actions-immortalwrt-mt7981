
name: Build Tailscale
on:
  repository_dispatch:
  workflow_dispatch:
    # push:
    inputs:
      tailscaleBranch:
        description: '选择tailscale分支'
        required: true
        default: 'master'
        type: choice
        options:
        - master
        - openwrt-23.05
        - none
      COMPILE:
        description: '是否编译'
        default: true
        required: true
        type: boolean
          
env:
  REPO_URL: https://github.com/hanwckf/immortalwrt-mt798x.git
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |

        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev \
        python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: use sdk
      working-directory: /workdir
      run: |
        df -hT $PWD
        curl -s https://github.com/mjl371/Actions-immortalwrt-mt7981/releases/download/sdk/immortalwrt-sdk-mediatek-mt7981_gcc-8.4.0_musl.Linux-x86_64.tar.xz
        tar -xf *.tar.xz -C openwrt
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Update Tailsclae
      if:  ${{ inputs.tailscaleBranch }}!= 'none'
      run: |
        # git clone -b master https://github.com/immortalwrt/packages.git
        # git clone -b openwrt-23.05 https://github.com/immortalwrt/packages.git
        git clone -b ${{ inputs.tailscaleBranch }} https://github.com/immortalwrt/packages.git
        rm -rf openwrt/feeds/packages/net/tailscale
        cp -r packages/net/tailscale openwrt/feeds/packages/net/tailscale

        mv -f tailscale/Makefile openwrt/feeds/packages/net/tailscale/Makefile
        
        grep PKG_VERSION:= openwrt/feeds/packages/net/tailscale/Makefile |awk -F ':=' '{print $2}' > TAILSCALE_VERSION
        echo "TAILSCALE_VERSION=$(cat TAILSCALE_VERSION)" >> $GITHUB_ENV

        sed -i '$ s/nftables/iptables/' openwrt/feeds/packages/net/tailscale/files/tailscale.conf

        rm -rf openwrt/feeds/packages/lang/golang
        cp -r packages/lang/golang openwrt/feeds/packages/lang/golang

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      if: ${{ inputs.COMPILE }} && !cancelled()
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        
        make package/tailscale/compile V=s -j$(nproc)

        echo "status=success" >> $GITHUB_OUTPUT
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload tailscale ipk
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && ${{ inputs.tailscaleBranch }}!= 'none'
      with:
        name: tailscale_${{ env.TAILSCALE_VERSION }}_ipk 
        path: openwrt/bin/packages/aarch64_cortex-a53/packages/tailscale*.ipk

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && ${{ inputs.UPLOAD_BIN_DIR }}
      with:
        name: OpenWrt_bin_${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: ${{ inputs.UPLOAD_FIRMWARE }} && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Clean Compile
      id: clean-compile
      run: |
        cd openwrt
        make clean

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 7
        keep_minimum_runs: 3

    - name: action-bark
      uses: harryzcy/action-bark@v2.0.3
      if: ${{ !cancelled() }}
      with:
        status: ${{ job.status }}
        device_key: ${{ secrets.BARK_DEVICE_KEY }}
        bark_server_url: ${{ secrets.BARK_SERVER_URL }}
